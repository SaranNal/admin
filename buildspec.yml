version: 0.2

phases:
  pre_build:
    commands:
      - echo prebuild phase
      - echo $CODEBUILD_INITIATOR
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo $COMMIT_HASH
      - |
        if echo $CODEBUILD_INITIATOR | grep -qe "-development$"; then
          ENV_TYPE=development;
          CLOUDFRONT_ID="E6UGVOB6YIWQG";
          S3_BUCKET=reblie-admin-portal-dev;
        fi;
      - |
        if echo $CODEBUILD_INITIATOR | grep -qe "-staging$"; then
          ENV_TYPE=staging;
          CLOUDFRONT_ID="";
          S3_BUCKET=;
        fi;
      - |
        if echo $CODEBUILD_INITIATOR | grep -qe "-production$"; then
          ENV_TYPE=production;
          CLOUDFRONT_ID="";
          S3_BUCKET=;
        fi;
      - echo $ENV_TYPE
      - payload=$(echo -n '{"application":"development", "repoName":"reblie-admin-portal"}' | base64)
      - aws lambda invoke --function-name reblie-web-read-env --invocation-type RequestResponse --region us-east-1 --payload "$payload" app_env.json
      - cat app_env.json | jq -r '.body' >> .env
      - cat .env
      - echo $CLOUDFRONT_ID
      - echo $S3_BUCKET
      - echo Copying all the input artifacts to a single location
      - cp -a $CODEBUILD_SRC_DIR_BuildArtifact/* $CODEBUILD_SRC_DIR/
      - sed -i "s/assetPrefix:[^,$]*/assetPrefix:'\/$COMMIT_HASH'/" src/environments/environment.${ENV_TYPE}.ts
  build:
    commands:
      - echo Build started on `date`
      - npm install
      - npm run build
      - cp -r ./build/* s3://${S3_BUCKET}/$COMMIT_HASH
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Deploying to S3 ${S3_BUCKET}...
      - aws s3 sync ./build s3://${S3_BUCKET}/
      - echo Clearing CloudFront cache for index.html
      - aws configure set preview.cloudfront true
      - echo CLOUDFRONT_ID $CLOUDFRONT_ID
      - aws s3 cp index.html s3://${S3_BUCKET}/index.html --cache-control max-age=0
#       - |
#         for ID in ${CLOUDFRONT_ID}
#           do
#             aws cloudfront create-invalidation --distribution-id=${ID} --paths=/index.html
#         done
# cache:
#   paths:
#     - 'node_modules/**/*'


# echo "Build started on $(date)"
# mkdir -p ./reblie-admin-s3/$COMMIT_HASH
# npm run build
# cp -r ./build/* ./reblie-admin-s3/$COMMIT_HASH

# aws s3 cp -r ./build/* reblie-admin-s3/$COMMIT_HASH
# aws s3 cp ./build/index.html reblie-admin-s3/

# echo $ENV
#       - echo $CLOUDFRONT_ID
#       - echo $NG_BUILD
#       - echo $S3_BUCKET
#       - echo Copying all the input artifacts to a single location
#       - cp -a $CODEBUILD_SRC_DIR_BuildArtifact/* $CODEBUILD_SRC_DIR/
#       - sed -i "s/assetPrefix:[^,$]*/assetPrefix:'\/$COMMIT_HASH'/" src/environments/environment.${ENV}.ts
#   build:
#     commands:
#       - echo Build started on `date`
#       - ng build $NG_BUILD --prod --deploy-url="/$COMMIT_HASH/" --output-path="dist/knackforge-portal/$COMMIT_HASH/"
#       - cp dist/knackforge-portal/$COMMIT_HASH/index.html  dist/knackforge-portal/
#       - cp dist/knackforge-portal/$COMMIT_HASH/favicon.ico  dist/knackforge-portal/
#   post_build:
#     commands:
#       - echo Build completed on `date`
#       - echo Deploying to S3...
#       - cd dist/knackforge-portal && aws s3 sync ./ s3://${S3_BUCKET}.knackforge.com/
#       - aws s3 cp index.html s3://${S3_BUCKET}.knackforge.com/index.html --cache-control max-age=0